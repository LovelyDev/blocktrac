================
Deployment guide
================

Setup 5 servers:
- ziti_db
  - postgresql
- ziti_api
  - ziti application
- zitui
  - httpd
  - zitui webapp
- zitz1
  - backups
- zitz2
  - backups

Startup linodes for each of the servers
- ziti_db  (Linode 4GB)
- ziti_api (Linode 4GB)
- zitui    (Linode 2GB)
- zitz1    (Linode 2GB)
- zitz2    (Linode 2GB) - different data center

Edit DNS:
- point zerptracker.com A and AAAA records at zitui
- point zerptracker.net A and AAAA records at zitui
- point api.zerptracker.com A and AAAA records at ziti_api
- point api.zerptracker.net A and AAAA records at ziti_api

All servers prequisites
-----------------------
1. Install CentOS8
   - Minimal install
   - Full disk
   - Enable network
   - Set root pass
   - Create user w/ admin privilages
2. sudo dnf update
3. set hostname in /etc/hostname
4. Add private ip via linode dashboard
5. sudo reboot

ziti_db
-------
postgrsql setup:
1. dnf install postgresql-server
2. postgresql-setup initdb
3. vi /var/lib/pgsql/data/pg_hba.conf
  - <change local, host ipv4, and host ipv6 to reject>
  - <add>: hostssl all             all                    <ZITI IP ADDR>/32      md5 clientcert=1
4. openssl genrsa -des3 -out server.key 2048 # any passphrase
5. openssl rsa -in server.key -out server.key # removes passphrase
6. chmod 400 server.key
7. chown postgres.postgres server.key
8. openssl req -new -key server.key -days 3650 -out server.crt -x509 -subj '/CN=ziti_db'
9. chmod 400 server.crt
10. chown postgres.postgres server.crt
11. cp server.crt root.crt
12. chown postgres.postgres server.crt
13. vi /var/lib/pgsql/data/postgresql.conf
    - <make following changes>:
      listen_addresses = '<IP SERVER WILL LISTEN ON>'
      ssl = on
      ssl_ca_file = 'root.crt'
14. systemctl enable postgresql.service
15. systemctl start postgresql.service
16. firewall-cmd --permanent --add-rich-rule='
    rule family="ipv4"
    source address="192.168.195.58/32"
    port protocol="tcp" port="5432" accept' 
17. firewall-cmd --reload
18. su - postgres
19. createuser --interactive --pwprompt # answers: ziti / <password> / <password> / n / n / n
20. createdb -O ziti ziti

ziti_api
----
user setup:
1. <Set ziti_db ip in /etc/hosts>
2. adduser ziti
3. passwd ziti
4. touch /var/log/ziti.log
5. chown ziti.ziti /var/log/ziti.log

postgresql setup:
6. <login as ziti>
7. mkdir .postgresql
8. cd .postgresql
9. openssl genrsa -des3 -out postgresql.key 2048 # any passphrase
10. openssl rsa -in postgresql.key -out postgresql.key # remove passphrase 
11. openssl req -new -key postgresql.key -out postgresql.csr -subj '/CN=ziti'
12. scp postgresql.csr ziti_db:~/
13. <on ziti_db>:  openssl x509 -req -days 3650 -in postgresql.csr -CA /var/lib/pgsql/data/root.crt -CAkey /var/lib/pgsql/data/server.key -out postgresql.crt -CAcreateserial
14. scp ziti_db:~/postgresql.crt .
15. scp ziti_db:/var/lib/pgsql/data/root.crt .
16. chmod 600 postgrseql.*

ziti setup:
17. <as root>
18. curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo
19. rpm --import https://dl.yarnpkg.com/rpm/pubkey.gpg
20. dnf install epel-release
21. dnf install git screen htop nodejs yarn python2 make gcc-c++ redhat-rpm-config postgresql-devel
22. <as ziti>
23. git clone git@bitbucket.org:movitto/ziti.git
24. cd ziti
25. CXXFLAGS="-Wno-cast-function-type" yarn install
26. edit config/config.js to point to db
27. NODE_ENV='production' yarn db:migrate
28. NODE_ENV='production' yarn db:seed
29. screen
30. htop
31. NODE_ENV='production' yarn serve
32. ... listen_to_txs
33. ... run_filters
34. ... notify_sinks
35. ... manage_users
36. <detach from screen>
37. <as root>
... lets encrypt certificate
38. firewall-cmd --permanent --add-masquerade
39. firewall-cmd --permanent --add-forward-port=port=80:proto=tcp:toport=3000
40. firewall-cmd --reload

zitui
-----
httpd/zitui setup:
1. dnf install httpd mod_ssl rsync
2. mkdir /var/www/zitui
3. <on local machine>
4. scp httpd.conf root@zitui:/etc/httpd/conf.d/zerptrackercom.conf
5. Edit src/config.js to reference BACKEND_URL
6. ./deploy
7. <on zitui>
8. chown -R root.root /var/www/zitui
9. service httpd start
10. firewall-cmd --permanent --add-service=http
11. firewall-cmd --permanent --add-service=https
12. firewall-cmd --reload
... letsencrypt certificate

zitz1/zitz2
-----------
...
